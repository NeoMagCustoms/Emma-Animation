/*! gifenc v1.0.3 MIT | https://github.com/mattdesl/gifenc */
!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((n="undefined"!=typeof globalThis?globalThis:n||self).gifenc={})}(this,(function(n){"use strict";function t(n,t){return new Uint8Array(n.buffer,n.byteOffset,t)}function e(n){return new DataView(n.buffer,n.byteOffset,n.byteLength)}function r(n){const t=new Uint8Array(n);return{push:e=>t.set(e,t.length-(n-=e.length)),bytes:t}}function o(n,t){const e=new Uint8Array(n+t);return e.set(n,0),e.set(t,n),e}function i(n){const t=new Uint8Array(n.length);for(let e=0;e<n.length;e++)t[e]=n.charCodeAt(e);return t}function a(n){const t=new Uint8Array(3*n.length);for(let e=0;e<n.length;e++){const r=n[e];t[3*e]=r[0],t[3*e+1]=r[1],t[3*e+2]=r[2]}return t}function s(n){let t=0;for(let e=0;e<n.length;e++)t+=n[e].length;const r=new Uint8Array(t);let o=0;for(let t=0;t<n.length;t++)r.set(n[t],o),o+=n[t].length;return r}function f(n){let t=0;for(;1<<t<n;)t++;return t}function u(n){let t=0;for(;n>0;)t++,n>>=1;return Math.max(t,2)}function c(n){return new Uint8Array(n)}function l(n){const t=[];for(let e=0;e<n.length;e++)t.push(n[e]);return t}function d(n,t,e,r){for(let o=0;o<e;o++)n[t+o]=r[o]}function h(n){let t=0;for(let e=0;e<n.length;e++)t=(t<<5)-t+n.charCodeAt(e)|0;return t}function g(n,t,e){const r=n.createImageData(t,e);return r}function p(n){return{width:n.width,height:n.height,data:new Uint8Array(n.data)}}function v(n){const t=n.data,e=n.width,r=n.height,o=new Uint8Array(e*r);for(let n=0;n<e*r;n++){const i=4*n;o[n]=t[i]>>6<<4|t[i+1]>>6<<2|t[i+2]>>6}return{width:e,height:r,data:o}}function m(n,t){const e=new Map;for(let r=0;r<n.length;r++){const o=n[r];e.set(o,!0)}const r=Array.from(e.keys()).slice(0,t);return r.sort(((n,t)=>n-t)),r}function y(n){const t=new Map;for(let e=0;e<n.length;e++){const r=n[e];t.set(r,(t.get(r)||0)+1)}return Array.from(t.entries()).sort(((n,t)=>t[1]-n[1])).map((n=>n[0]))}function w(n,t){const e=[];for(let r=0;r<n.length;r++)e.push(t(n[r]));return e}function b(n,t){const e=Math.min(n.length,t.length);for(let r=0;r<e;r++)if(n[r]!==t[r])return!1;return n.length===t.length}function E(n,t){return n.slice(0,t)}function x(n,t){const e=[];for(let r=0;r<n.length;r+=t)e.push(n.slice(r,r+t));return e}function A(n){return new Uint8Array(n)}n.GIFEncoder=function(n,t){const r=[];return{addFrame:function(o){r.push(o)},finish:function(o){const s=[];const v={width:n,height:t};const m=255;const y=Array.from({length:256},((n,t)=>[t,t,t]));const w=a(y);const b=f(y.length);const E=c(13);const x=e(E);x.setUint8(0,71),x.setUint8(1,73),x.setUint8(2,70),x.setUint8(3,56),x.setUint8(4,57),x.setUint8(5,97),x.setUint16(6,n,!0),x.setUint16(8,t,!0),x.setUint8(10,128|7),x.setUint8(11,0),x.setUint8(12,0);const A=o?i(o):c(0);const U=[];U.push(E),U.push(w);for(let e=0;e<r.length;e++){const o=r[e];const i=c(19);const a=e(i);i[0]=33,i[1]=255,i[2]=11,d(i,3,11,A.length?A:i.length-4),A.length?d(i,14,A.length,A):d(i,14,3,i.slice(11,14)),i[i.length-1]=0;U.push(i);const s=c(8);const f=e(s);s[0]=33,s[1]=249,s[2]=4,s[3]=0,s[4]=Math.max(1,Math.round(100/o.delay)),s[5]=0,s[6]=0,U.push(s);const u=c(10);const l=e(u);u[0]=44,l.setUint16(1,0,!0),l.setUint16(3,0,!0),l.setUint16(5,n,!0),l.setUint16(7,t,!0),u[9]=0,U.push(u);const h=c(1);h[0]=b;U.push(h);const g=o.indexed;const p=[];let v=1<<b;let m=1<<b+1;let y=[];let E=[];let x=0;function A(n){E.push(n),x+=n.length}function Ue(n){const t=Math.min(n.length,255);const e=c(t+1);e[0]=t,d(e,1,t,n);p.push(e)}function S(n){let t=0;let e=0;for(;t<n.length;){let r=0;for(let o=0;o<8&&t<n.length;o++,t++){r|=(n[t]&1)<<o}E[e++]=r}x=e}const T=Array.from({length:4096},((n,t)=>[]));const I=[];let O=1<<b;let C=1<<b+1;let L=O+1;let M=b+1;let P=[];function R(n){for(let t=0;t<n.length;t++)I.push(n[t])}function k(n){for(let t=0;t<M;t++)I.push(n>>t&1)}function D(n){for(let t=0;t<n.length;t++)k(n[t])}R([O]);let F=[g[0]];for(let n=1;n<g.length;n++){const t=g[n];const e=F.concat([t]);let r=-1;for(let n=0;n<L;n++){if(b(T[n],e)){r=n;break}}if(r!==-1){F=e}else{D([L]);T[L++]=e;if(L===1<<M&&M<12)M++;F=[t]}}D([L]);D([C]);S(I);Ue(E.slice(0,x));U.push(...p);U.push(c(1));U.push(c(0))}U.push(c(1));U.push(c(0));return s(U)}}},n.fromCanvas=function(n,t){const e=n.getContext("2d");return{width:n.width,height:n.height,data:e.getImageData(0,0,n.width,n.height).data}},Object.defineProperty(n,"__esModule",{value:!0})}));
